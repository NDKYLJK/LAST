<!DOCTYPE html>
<html>
<head>
    <title>产品数据表</title>
    <meta charset="UTF-8" />
    <!-- import CSS -->
    <link href="https://unpkg.com/element-ui/lib/theme-chalk/index.css"
          rel="stylesheet" />
</head>
<body style="margin: 0;">
    <el-container id="app">
        <el-main>
            <el-row>
                <el-col>
                    <el-table :border="true"
                              :data="products"
                              style="width: 100%">
                        <el-table-column :sortable="true"
                                         header-align="center"
                                         label="产品编号"
                                         prop="productNumber">
                        </el-table-column>
                        <el-table-column :sortable="true"
                                         header-align="center"
                                         label="产品名称"
                                         prop="productName">
                        </el-table-column>
                        <el-table-column :sortable="true"
                                         header-align="center"
                                         label="产品类型"
                                         prop="productType">
                        </el-table-column>
                        <el-table-column :sortable="true"
                                         header-align="center"
                                         label="价格"
                                         prop="price">
                        </el-table-column>
                        <el-table-column :sortable="true"
                                         header-align="center"
                                         label="库存数量"
                                         prop="inventory">
                        </el-table-column>
                        <el-table-column align="center"
                                         header-align="center"
                                         label="操作">
                            <template slot-scope="scope">
                                <el-button size="mini"
                                           v-on:click="onEditButtonClick(scope.row.id)">
                                    编辑
                                </el-button>
                                <el-button size="mini"
                                           type="danger"
                                           v-on:click="onDeleteButtonClick(scope.row.id)">
                                    删除
                                </el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                </el-col>
            </el-row>
        </el-main>
    </el-container>
    <!-- import Vue before Element -->
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <!-- import JavaScript -->
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/axios/0.19.2/axios.js"></script>
    <script>
    const app = new Vue({
        el: "#app",
        data: {
            products: []
        },
        methods: {
            async GetAllProducts(order) {
                // 获取所有产品数据
                let response = await axios.get('/Product/GetAll', { params: { order: order } });

                if (response.data.code === 'success') {
                    this.products = response.data.data;
                } else {
                    this.$message({
                        message: '记录获取失败',
                        type: 'error'
                    });
                }
            },
            onEditButtonClick(id) {
                window.location.href = "/Product/Edit/" + id;
            },
            onDeleteButtonClick(id) {
                this.$confirm('确认删除该产品吗？',
                    '提示',
                    {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    })
                    .then(async () => {
                        await this.deleteProduct(id);
                    })
                    .catch(() => { });
            },
            async deleteProduct(id) {
                let response = await axios.get('/Product/Delete/', { params: { id: id } });

                if (response.data.code === 'success') {
                    this.$message({
                        type: 'success',
                        message: '删除记录成功!'
                    });
                    // 删除产品记录后刷新数据
                    this.GetAllProducts(this.order);
                } else {
                    this.$message({
                        message: '删除记录失败',
                        type: 'error'
                    });
                }
            },
            //用于界面的安全防止非管理员直接用URl
            async LoginAndAdmin() {

                //用于判断用户有没有登录并且时不时管理员
                let response = await axios.get('/User/LoginAndAdmin');
                if (response.data.code === 'success') {

                } else if (response.data.code === 'NoAdmin') {
                    this.$confirm('您不是管理员',
                        '提示',
                        {
                            confirmButtonText: '确定',
                            cancelButtonText: '取消',
                            type: 'warning'
                        })
                        .then(async () => {
                            //返回用户前台
                            window.location.href = "/User/Index";
                            //await this.deleteProduct(id);
                        })
                        .catch(() => {
                            //返回用户前台
                            window.location.href = "/User/Index";
                        });
                }
                else {
                    this.$confirm('您还未登录',
                        '提示',
                        {
                            confirmButtonText: '确定',
                            cancelButtonText: '取消',
                            type: 'warning'
                        })
                        .then(async () => {
                            //返回用户前台
                            window.location.href = "/User/Index";
                            //await this.deleteProduct(id);
                        })
                        .catch(() => {
                            //返回用户前台
                            window.location.href = "/User/Index";
                        });
                }
            }

        },
        mounted() {
            this.GetAllProducts('desc');
            //用于防止非法用户直接用URL
            this.LoginAndAdmin();
        }

    });
    </script>
</body>

</html>