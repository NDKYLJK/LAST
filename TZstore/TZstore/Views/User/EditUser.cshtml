<!DOCTYPE html>
<html>

<head>
    <title>个人信息编辑页面</title>
    <meta charset="UTF-8" />
    <!-- import CSS -->
    <link href="https://unpkg.com/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
</head>

<body style="margin: 0;">
    <el-container id="app" style="height: 800px; background-color: rgb(0, 183, 255);">
        <el-main>
            <el-row>
                <el-col :span="12" offset="6">
                    <el-card class="box-card" style="height: 500px;">
                        <el-form :model="user" label-width="auto">
                            <el-form-item style="text-align: center;">
                                <h2>修改信息</h2>
                            </el-form-item>
                            <el-row>
                                <el-col>
                                    <el-form-item :rules="[{ required: true, message: '请输入旧密码', trigger: 'blur' },{required: true,pattern: /^(\w){6,20}$/,message: '请输入当前的密码',trigger: 'blur'}]" label="旧密码" prop="Oldpassword">
                                        <el-input placeholder="请输入旧密码" v-model="user.Oldpassword" show-password>
                                        </el-input>
                                    </el-form-item>
                                </el-col>
                            </el-row>
                            <el-row>
                                <el-col>
                                    <el-form-item :rules="[{ required: true, message: '请输入新密码', trigger: 'blur' },{required: true,pattern: /^(\w){6,20}$/,message: '只能输入6-20个字母、数字、下划线',trigger: 'blur'}]" label="新密码" prop="userPassword">
                                        <el-input placeholder="请输入新密码" v-model="user.userPassword" show-password>
                                        </el-input>
                                    </el-form-item>
                                </el-col>
                            </el-row>
                            <el-form-item :rules="[{ required: true, message: '手机号', trigger: 'blur' }, { required: true, pattern: /^((13|14|15|16|17|18)[0-9]{1}\d{8})|((166|199|198)[0-9]{1}\d{7})$/, message: '请输入正确的手机号码', trigger: 'blur' }]" label="手机" prop="phoneNumber">
                                <el-input placeholder="手机号" v-model="user.phoneNumber">
                                    <template slot="prepend">
                                        +86
                                    </template>
                                </el-input>
                            </el-form-item>
                            <el-form-item :rules="[{ required: true, message: '地址', trigger: 'blur' }]" label="地址" prop="address">
                                <el-input placeholder="地址" v-model="user.address">
                                </el-input>
                            </el-form-item>
                            <el-form-item style="text-align: center;">
                                <el-button plain type="danger"  round v-on:click="onUpdataUsertButtonClick">修改</el-button>
                                <el-button plain type="primary" round v-on:click="onBackButtonClick">返回</el-button>
                            </el-form-item>
                        </el-form>
                    </el-card>
                </el-col>
            </el-row>
        </el-main>
    </el-container>
    <!-- import Vue before Element -->
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <!-- import JavaScript -->
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/axios/0.19.2/axios.js"></script>
    <script>
    const app = new Vue({
        el: "#app",

        data: {
            // 用于绑定数据
            user: {
                Oldpassword: '',
                userPassword: '',
                phoneNumber:'',
                address:'',
            },
        },
        methods: {
            onBackButtonClick() {
                window.location.href = "/User/Index";
            },
            //修改个人信息
            async onUpdataUsertButtonClick() {
               
                let response = await axios.post('/User/UpdataUser', this.user);

                if (response.data.code === 'success') {
                    this.$message({
                        message: '修改成功',
                        type: 'success'
                    });
                    //返回登录界面
                    window.location.href = "/User/Login";
                } else {
                    this.$message({
                        message: '修改失败',
                        type: 'error'
                    });
                }
            },
            async GetUserBySessionName() {
                let response = await axios.get('/User/SearchUserName');
                //可以显示旧的地址和电话
                //密码因为字段名字不同不显示
                this.user = response.data.data;
                this.user.userPassword = '';
            }

        },
        mounted() {
            this.GetUserBySessionName();
        }
    });
    </script>
</body>

</html>