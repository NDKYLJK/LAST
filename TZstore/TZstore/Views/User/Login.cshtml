<!DOCTYPE html>
<html>

<head>
    <title>登录页面</title>
    <meta charset="UTF-8" />
    <!-- import CSS -->
    <link href="https://unpkg.com/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
</head>

<body style="margin: 0;">
    <el-container id="app" style="height: 800px; background-color: rgb(0, 183, 255);">
        <el-main>
            <el-row>
                <el-col :span="12" offset="6">
                    <el-card class="box-card" style="height: 400px;">
                        <el-form :model="user" label-width="auto">
                            <el-form-item style="text-align: center;">
                                <h2>登录</h2>
                            </el-form-item>
                            <el-row>
                                <el-col>
                                    <el-form-item :rules="[{ required: true, message: '请输入账号', trigger: 'blur' }]" label="账号" prop="userName">
                                        <el-input placeholder="请输入账号" v-model="user.userName">
                                        </el-input>
                                    </el-form-item>
                                </el-col>
                            </el-row>
                            <el-row>
                                <el-col>
                                    <el-form-item :rules="[{ required: true, message: '请输入密码', trigger: 'blur' }]" label="密码" prop="password">
                                        <el-input placeholder="请输入密码" v-model="user.userPassword" show-password>
                                        </el-input>
                                    </el-form-item>
                                </el-col>
                            </el-row>
                            <el-form-item style="text-align: center;">
                                <el-button plain type="primary" round icon="el-icon-upload" v-on:click="onLoginButtonClick">登录</el-button>
                                <el-button plain type="danger" round v-on:click="onRegisterButtonClick">注册</el-button>
                                <el-button plain type="primary" round v-on:click="onBackButtonClick">返回</el-button>
                            </el-form-item>
                        </el-form>
                    </el-card>
                </el-col>
            </el-row>
        </el-main>
    </el-container>
    <!-- import Vue before Element -->
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <!-- import JavaScript -->
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/axios/0.19.2/axios.js"></script>
    <script>
        const app = new Vue({
            el: "#app",

            data: {
                // 用于绑定数据
                user: {
                    userName: '',
                    userPassword: ''
                },
            },
            methods: {
                onBackButtonClick() {
                    window.location.href = "/User/Index";
                },
                onRegisterButtonClick() {
                    //可以跳转用的是User控制器到注册页面
                    window.location.href = "/User/Register";
                },
                 onLoginsuccessButtonClick() {
                     window.location.href = "/User/Index";
                },
                async onLoginButtonClick() {
                    //将输入的用户名和密码传入后面的程序用的是控制器方法
                    const response = await axios.post('/User/PLogin', this.user);
                    if (response.data.code === 'success') {
                        //登陆成功跳转到首页  会是先在控制器中记录下用户信息
                        window.location.href = "/User/Index";
                    } else if (response.data.code === 'fail') {
                        this.$message({
                            message: '用户名或密码错误',
                            type: 'error'
                        });
                    }
                    else {
                        //不可以重复登录
                        this.$message({
                            message: '已经处于登录状态',
                            type: 'error'
                        });
                    }
                },
                async RegisterSuccess() {
                    let response = await axios.get('/User/RegisterSuccess');
                    if (response.data.code === 'success') {
                        this.user.userName = response.data.data;
                    }
                }
               

            },
            mounted() {
                //首先检测一下是不是从注册页面成功注册回来的
                this.RegisterSuccess();
            }
        });
    </script>
</body>

</html>